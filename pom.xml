<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>it.polimi</groupId>
	<artifactId>hyperh</artifactId>
	<packaging>jar</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>${project.artifactId}</name>
	<description>My wonderful scala app</description>
	<inceptionYear>2021</inceptionYear>
	<licenses>
		<license>
			<name>My License</name>
			<url>https://....</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<maven.compiler.source>3.8.1</maven.compiler.source>
		<maven.compiler.target>3.8.1</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<scala.binary.version>2.11</scala.binary.version>
		<scala.version>2.11.11</scala.version> <!-- 2.10.6 -->
		<akka.group>com.typesafe.akka</akka.group>
		<akka.version>2.3.16</akka.version> <!-- Previously 2.3.8 -->
		<spark.version>2.4.7</spark.version>
	</properties>

	<repositories>
		<repository>
			<id>scala-tools.org</id>
			<name>Scala-Tools Maven2 Repository</name>
			<url>https://scala-tools.org/repo-releases</url>
		</repository>
		<repository>
			<id>mvnrepository</id>
			<url>https://repo1.maven.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>apache-repo</id>
			<name>Apache Repository</name>
			<url>https://repository.apache.org/content/repositories/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>akka-snapshots</id>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://repo.akka.io/snapshots/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>scala-tools.org</id>
			<name>Scala-Tools Maven2 Repository</name>
			<url>https://scala-tools.org/repo-releases</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.binary.version}</artifactId>
			<version>${spark.version}</version>
		</dependency>

<!--		<dependency>-->
<!--			<groupId>commons-logging</groupId>-->
<!--			<artifactId>commons-logging</artifactId>-->
<!--			<version>1.1.1</version>-->
<!--		</dependency>-->

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-compiler</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-reflect</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-actors</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scalap</artifactId>
			<version>${scala.version}</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.specs2</groupId>
			<artifactId>specs2_${scala.binary.version}</artifactId>
			<version>2.3.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.binary.version}</artifactId>
			<version>2.2.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-parser-combinators</artifactId>
			<version>2.11.0-M4</version>
		</dependency>
		<!-- Akka Actors for parallel execution -->
		<dependency>
			<groupId>${akka.group}</groupId>
			<artifactId>akka-actor_${scala.binary.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>${akka.group}</groupId>
			<artifactId>akka-remote_${scala.binary.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>${akka.group}</groupId>
			<artifactId>akka-slf4j_${scala.binary.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>${akka.group}</groupId>
			<artifactId>akka-testkit_${scala.binary.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>${akka.group}</groupId>
			<artifactId>akka-zeromq_${scala.binary.version}</artifactId>
			<version>${akka.version}</version>
			<exclusions>
				<exclusion>
					<groupId>${akka.group}</groupId>
					<artifactId>akka-actor_${scala.binary.version}</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<plugins>
			<plugin>
				<!-- see http://davidb.github.com/scala-maven-plugin -->
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<args>
								<!-- <arg>-make:transitive</arg> -->
								<arg>-dependencyfile</arg>
								<arg>${project.build.directory}/.scala_dependencies</arg>
							</args>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.4</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>allinone</shadedClassifierName>
							<artifactSet>
								<includes>
									<include>*:*</include>
								</includes>
							</artifactSet>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>it.polimi.hyperh.apps.MainClass</Main-Class>  <!-- CLASS TO EXECUTE -->
									</manifestEntries>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
							</transformers>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<!-- <exclude>META-INF/maven/**</exclude>   Added this todo: remove or keep?-->
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<useFile>false</useFile>
					<disableXmlReport>true</disableXmlReport>
					<!-- If you have classpath issue like NoDefClassError,... -->
					<!--					 useManifestOnlyJar>false</useManifestOnlyJar -->
					<includes>
						<include>**/*Test.*</include>
						<include>**/*Suite.*</include>
					</includes>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
